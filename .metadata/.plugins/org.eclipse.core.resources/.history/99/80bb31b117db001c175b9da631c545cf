package com.wej.singer.controllers;

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.wej.singer.entities.Singer;
import com.wej.singer.service.SingerService;

@Controller
public class SingerController {

	@Autowired
	SingerService singerService;
	
	@RequestMapping("/showCreate")
	public String showCreate(ModelMap modelMap)
	{
	modelMap.addAttribute("singer", new Singer());
	modelMap.addAttribute("mode", "new");
	return "formSinger";
	}
	
	@RequestMapping("/saveProduit")
	public String saveSinger(@Valid Singer singer,BindingResult bindingResult)
	{
	if (bindingResult.hasErrors()) return "formSinger";
	singerService.saveSinger(singer);
	return "formSinger";
	}
	
	@RequestMapping("/ListeProduits")
	public String listeSingers(ModelMap modelMap,

	@RequestParam (name="page",defaultValue = "0") int page,
	@RequestParam (name="size", defaultValue = "2") int size)

	{
	Page<Singer> singers = singerService.getAllSingersParPage(page, size);
	modelMap.addAttribute("singers", singers);

	modelMap.addAttribute("pages", new int[singers.getTotalPages()]);

	modelMap.addAttribute("currentPage", page);
	return "listeSinger";
	}
	
	@RequestMapping("/supprimerProduit")
	public String supprimerSinger(@RequestParam("id") Long id,

	ModelMap modelMap,
	@RequestParam (name="page",defaultValue = "0") int page,
	@RequestParam (name="size", defaultValue = "2") int size)

	{
	singerService.deleteSingerById(id);
	Page<Singer> singers = singerService.getAllSingersParPage(page,size);

	modelMap.addAttribute("singers", singers);
	modelMap.addAttribute("pages", new int[singers.getTotalPages()]);
	modelMap.addAttribute("currentPage", page);
	modelMap.addAttribute("size", size);
	return "listeSinger";
	}
	
	@RequestMapping("/modifierProduit")
	public String editerProduit(@RequestParam("id") Long id,ModelMap modelMap)
	{
	Singer s= singerService.getSinger(id);
	modelMap.addAttribute("singer", s);
	modelMap.addAttribute("mode", "edit");
	return "formSinger";
	}
	
	@RequestMapping("/updateProduit")
	public String updateSinger(@ModelAttribute("singer") Singer singer,
	@RequestParam("date") String date,ModelMap modelMap) throws ParseException

{
	//conversion de la date
	
	SimpleDateFormat dateformat = new SimpleDateFormat("yyyy-MM-dd");
	Date dateCreation = dateformat.parse(String.valueOf(date));
	singer.setDateNSinger(dateCreation);
	singerService.updateSinger(singer);
	List<Singer> singers = singerService.getAllSingers();
	modelMap.addAttribute("singers", singers);
	return "listeSinger";
	
	}
}
